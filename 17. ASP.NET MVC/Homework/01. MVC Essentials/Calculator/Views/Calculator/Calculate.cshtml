@{
    ViewBag.Page = "Calculator";
}

@model Calculation
<div class="row">
    <div class="col-md-8 col-md-offset-2">
        <h1>@ViewBag.Page</h1>
        @{
            string quantityLabel = "Quantity";
            string kiloValueLabel = "Kilo";
        }
        @using (Html.BeginForm("Calculate", "Calculator", FormMethod.Get, new { @class = "form-horizontal" }))
        {
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(m => m.InputValue.Prefix, nameof(MetricPrefix), new {@class = "control-label"}):
                </div>
                <div class="col-md-3">
                    @Html.EnumDropDownListFor(m => m.InputValue.Prefix, new {@class = "form-control"})
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(m => m.InputValue.Unit, nameof(Unit), new { @class = "control-label" }):
                </div>
                <div class="col-md-3">
                    @Html.EnumDropDownListFor(m => m.InputValue.Unit, new { @class = "form-control" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(m => m.InputValue.Value, quantityLabel, new {@class = "control-label"}):
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.InputValue.Value, new {@class = "form-control"})
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(m => m.InputValue.KiloValue, kiloValueLabel, new {@class = "control-label"}):
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(
                        expression: m => m.InputValue.KiloValue,
                        selectList: new SelectList(Enum.GetValues(typeof (KiloValue)).Cast<int>().ToArray()),
                        htmlAttributes: new {@class = "form-control"}
                    )
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-12">
                    <input class="btn btn-primary" type="submit" value="GO"/>
                </div>
            </div>
        }
        <table class="table table-striped table-hover ">
            <thead>
            <tr>
                <th>@nameof(MetricPrefix)</th>
                <th>@quantityLabel</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var type in Model.Results)
            {
                <tr>
                    <td>@type.FullName</td>
                    <td>@type.Value</td>
                </tr>
            }
            </tbody>
        </table>
    </div>    
</div>